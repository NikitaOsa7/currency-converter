{"version":3,"file":"static/js/860.715ee347.chunk.js","mappings":"sLACA,GAAgB,MAAQ,uC,SCET,SAASA,EAAuBC,GAC3C,OACI,iBAAKC,UAAWC,EAAAA,MAAhB,WACI,kBAAqBD,UAAWC,EAAAA,WAAcC,KAAK,OAAOC,MAAOJ,EAAMK,OAAQC,SAAU,SAAAC,GAAK,OAAIP,EAAMQ,eAAeD,EAAME,OAAOL,MAAtC,GAAlF,UACZ,mBAAuBH,UAAWC,EAAAA,OAAUQ,MAAOV,EAAMW,SAAUL,SAAU,SAAAC,GAAK,OAAIP,EAAMY,iBAAiBL,EAAME,OAAOL,MAAxC,EAAlF,SACKJ,EAAMa,WAAWC,KAAK,SAAAH,GAAQ,OAC3B,mBAAQD,MAAOC,EAAf,SAA0BA,GADC,KADtB,YAOxB,CCbD,MAAiC,0C,2BCMlB,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,OAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,OAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,IAAnC,eAAOS,EAAP,KAAcC,EAAd,KAkBA,SAASC,EAAOC,GACd,OAAOA,EAAOC,QAAQ,EACvB,CAED,SAASC,EAAoBb,GAC3BG,EAAWO,EAAOV,EAAUQ,EAAMF,GAAaE,EAAMJ,KACrDH,EAAWD,EACZ,CAiBD,OAxCAc,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAU,0FACPC,MAAK,SAAAC,GACJR,EAASQ,EAASC,KAAKV,MAC1B,GACF,GAAE,KAIHM,EAAAA,EAAAA,YAAU,WACHN,GACHK,EAAoB,EAEvB,GAAE,CAACL,KA4BH,4BACG,eAAIxB,UAAWC,EAAf,0LACA,SAACH,EAAD,CACES,eAAgBsB,EAChBlB,iBApBN,SAA+BS,GAC7BD,EAAWO,EAAOV,EAAUQ,EAAMF,GAAaE,EAAMJ,KACrDC,EAAaD,EACd,EAkBKR,WAAYuB,OAAOC,KAAKZ,GACxBpB,OAAQY,EACRN,SAAUU,KAGZ,SAACtB,EAAD,CACES,eAtBN,SAA6BW,GAC3BD,EAAWS,EAAOR,EAAUM,EAAMJ,GAAaI,EAAMF,KACrDH,EAAWD,EACZ,EAoBKP,iBAlBN,SAA+BW,GAC7BL,EAAWS,EAAOR,EAAUM,EAAMJ,GAAaI,EAAMF,KACrDC,EAAaD,EACd,EAgBKV,WAAYuB,OAAOC,KAAKZ,GACxBpB,OAAQc,EACRR,SAAUY,MAIjB,C","sources":["webpack://currency-converter/./src/components/CurrencyConverterInput/CurrencyConverterInput.module.css?ad52","components/CurrencyConverterInput/CurrencyConverterInput.jsx","webpack://currency-converter/./src/components/CurrencyConverter/CurrencyConverter.module.css?3751","components/CurrencyConverter/CurrencyConverter.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"group\":\"CurrencyConverterInput_group__xi94X\"};","import PropTypes from 'prop-types';\r\nimport s from './CurrencyConverterInput.module.css'\r\n\r\nexport default function CurrencyConverterInput(props) {\r\n    return (\r\n        <div className={s.group}>\r\n            <input key={'input'} className={s.valueInput} type=\"text\" value={props.amount} onChange={event => props.onAmountChange(event.target.value)} />\r\n            <select key={'select'} className={s.select} vlaue={props.currency} onChange={event => props.onCurrencyChange(event.target.value)}>\r\n                {props.currencies.map((currency => (\r\n                    <option vlaue={currency}>{currency}</option>\r\n                )))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nCurrencyConverterInput.propTypes = {\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n    currencies: PropTypes.array,\r\n    onAmountChange: PropTypes.func,\r\n    onCurrencyChange: PropTypes.func,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"converterTitle\":\"CurrencyConverter_converterTitle__raMUi\"};","import CurrencyConverterInput from 'components/CurrencyConverterInput/CurrencyConverterInput';\nimport s from '../CurrencyConverter/CurrencyConverter.module.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\n\nexport default function CurrencyConverter() {\n  const [amount1, setAmount1] = useState(1);\n  const [amount2, setAmount2] = useState(1);\n  const [currency1, setCurrency1] = useState('USD');\n  const [currency2, setCurrency2] = useState('UAH');\n  const [rates, setRates] = useState([]);\n\n  useEffect(() => {\n    axios.get('https://api.apilayer.com/fixer/latest?base=USD&apikey=GTe2mTtGiSLxOnX3K5fu3LHQRcTQtSLH')\n      .then(response => {\n        setRates(response.data.rates);\n    })\n  }, [])\n\n  /* eslint-disable */ \n  \n  useEffect(() => {\n    if (!rates) {\n      handleAmount1Change(1);\n    }\n  }, [rates])\n  \n\n  function format(number) {\n    return number.toFixed(4)\n  }\n\n  function handleAmount1Change(amount1) {\n    setAmount2(format(amount1 * rates[currency2] / rates[currency1]))\n    setAmount1(amount1);\n  };\n\n  function handleCurrency1Change(currency1) {\n    setAmount2(format(amount1 * rates[currency2] / rates[currency1]))\n    setCurrency1(currency1);\n  }\n\n  function handleAmount2Change(amount2) {\n    setAmount1(format(amount2 * rates[currency1] / rates[currency2]))\n    setAmount2(amount2);\n  };\n\n  function handleCurrency2Change(currency2) {\n    setAmount1(format(amount2 * rates[currency1] / rates[currency2]))\n    setCurrency2(currency2);\n  }\n\n  return (\n   <div>\n      <h1 className={s.converterTitle}>ВЫБЕРИТЕ ВАЛЮТЫ ДЛЯ КОНВЕРТАЦИИ</h1>\n      <CurrencyConverterInput\n        onAmountChange={handleAmount1Change}\n        onCurrencyChange={handleCurrency1Change}\n        currencies={Object.keys(rates)}\n        amount={amount1}\n        currency={currency1}\n      />\n\n      <CurrencyConverterInput\n        onAmountChange={handleAmount2Change}\n        onCurrencyChange={handleCurrency2Change}\n        currencies={Object.keys(rates)}\n        amount={amount2}\n        currency={currency2}\n      />\n    </div>\n  );\n}\n"],"names":["CurrencyConverterInput","props","className","s","type","value","amount","onChange","event","onAmountChange","target","vlaue","currency","onCurrencyChange","currencies","map","CurrencyConverter","useState","amount1","setAmount1","amount2","setAmount2","currency1","setCurrency1","currency2","setCurrency2","rates","setRates","format","number","toFixed","handleAmount1Change","useEffect","axios","then","response","data","Object","keys"],"sourceRoot":""}